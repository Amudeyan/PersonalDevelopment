server:
  port : 8072
spring:
  application:
    name: "apigateway"
  config:
    import: "optional:configserver:http://localhost:8071/"
#  data:
#    redis:
#      connect-timeout: 2s
#      host: localhost
#      port: 6379
#      timeout: 1s
  cloud:
    gateway:
      discovery:
        locator:
          enabled : false
      httpclient:
        connect-timeout: 1000
        response-timeout: 10s
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"
management:
  endpoints:
    web:
      exposure:
        include : "*"
  endpoint:
    gateway:
      enabled : true
      lowerCaseServiceId: true
  info:
    env:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
resilience4j.retry:
  instances:
    default:
      maxAttempts: 3
      waitDuration: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
#      retryExceptions:
#        - org.springframework.web.client.HttpServerErrorException
#        - java.io.IOException
#        - java.lang.RuntimeException
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException

info:
  app:
    name: "apigateway"
    description: "apigateway Application"
    version: "1.0.0"
logging:
  level:
    filter: DEBUG